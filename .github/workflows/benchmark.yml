# This is a basic workflow to help you get started with Actions

name: benchmark-check

on:
  # Triggers the workflow on push or pull request events but only for the master branch
  pull_request:

jobs:
  benchmark:
    runs-on: ubuntu-latest

    env:
      IRIS_TEST_DATA_LOC_PATH: benchmarks
      IRIS_TEST_DATA_PATH: benchmarks/iris-test-data
      IRIS_TEST_DATA_VERSION: "2.5"
      # Lets us manually bump the cache to rebuild
      TEST_DATA_CACHE_BUILD: "2"

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Fetch the PR base branch too
        run: |
          git fetch --depth=1 origin ${{ github.event.pull_request.base.ref }}
          git branch _base FETCH_HEAD
          echo PR_BASE_SHA=$(git rev-parse _base) >> $GITHUB_ENV

      - name: Install Nox
        run: |
          pip install nox

      - name: Cache .nox and .asv/env directories
        id: cache-env-dir
        uses: actions/cache@v2
        with:
          path: |
            .nox
            benchmarks/.asv/env
          # Make sure GHA never gets an exact cache match by using the unique
          #  github.sha. This means it will always store this run as a new
          #  cache (Nox may have made relevant changes during run). Cache
          #  restoration still succeeds via the partial restore-key match.
          key: ${{ runner.os }}-${{ github.sha }}
          restore-keys: ${{ runner.os }}

      - name: Cache test data directory
        id: cache-test-data
        uses: actions/cache@v2
        with:
          path: |
            ${{ env.IRIS_TEST_DATA_PATH }}
          key:
            test-data-${{ env.IRIS_TEST_DATA_VERSION }}-${{ env.TEST_DATA_CACHE_BUILD }}

      - name: Fetch the test data
        if: steps.cache-test-data.outputs.cache-hit != 'true'
        run: |
          wget --quiet https://github.com/SciTools/iris-test-data/archive/v${IRIS_TEST_DATA_VERSION}.zip -O iris-test-data.zip
          unzip -q iris-test-data.zip
          mkdir --parents ${GITHUB_WORKSPACE}/${IRIS_TEST_DATA_LOC_PATH}
          mv iris-test-data-${IRIS_TEST_DATA_VERSION} ${GITHUB_WORKSPACE}/${IRIS_TEST_DATA_PATH}
          
      - name: Set test data var
        run: |
          echo "OVERRIDE_TEST_DATA_REPOSITORY=${GITHUB_WORKSPACE}/${IRIS_TEST_DATA_PATH}/test_data" >> $GITHUB_ENV

      - name: Run CI benchmarks
        run: |
          mkdir --parents benchmarks/.asv
          set -o pipefail
          nox --session="benchmarks(ci compare)" | tee benchmarks/.asv/ci_compare.txt

      - name: Archive asv results
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: asv-report
          path: |
            benchmarks/.asv/results
            benchmarks/.asv/ci_compare.txt
